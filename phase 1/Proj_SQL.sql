-- MySQL Script generated by MySQL Workbench
-- Wed May 10 11:50:23 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Food Reservation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Food Reservation` (
  `Name` VARCHAR(45) NOT NULL,
  `Price` INT NULL,
  `Reserved` TINYINT NULL,
  `canceled` TINYINT NULL,
  `Forgot` TINYINT NULL,
  `Eaten` TINYINT NULL,
  PRIMARY KEY (`Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Class Schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Class Schedule` (
  `Course name` VARCHAR(45) NOT NULL,
  `Number of course` INT NULL,
  `Professor` VARCHAR(45) NULL,
  `Class number` INT NULL,
  `Class Day` VARCHAR(45) NULL,
  `Class time` TIME NULL,
  PRIMARY KEY (`Course name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Examination Schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Examination Schedule` (
  `Course name` VARCHAR(45) NOT NULL,
  `Professor` VARCHAR(45) NULL,
  `Exam day` VARCHAR(45) NULL,
  `Exam time` TIME NULL,
  `Exam date` DATE NULL,
  `Class` VARCHAR(45) NULL,
  `Seat number` INT NULL,
  PRIMARY KEY (`Course name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Select unit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Select unit` (
  `Course group` INT NOT NULL,
  `Authorized courses name` VARCHAR(45) NULL,
  `number of authorized courses` INT NULL,
  `Passed courses` VARCHAR(45) NULL,
  `Class capacity` INT NULL,
  `Select unit date` DATE NULL,
  `Select unit time` TIME NULL,
  PRIMARY KEY (`Course group`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Student` (
  `Student number` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Phone number` INT NULL,
  `Address` VARCHAR(45) NULL,
  `Email` VARCHAR(45) NULL,
  `GPA` INT NULL,
  `Financial balance` INT NULL,
  `ID` INT NULL,
  `Food Reservation_Name` VARCHAR(45) NOT NULL,
  `Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Select unit_Course group` INT NOT NULL,
  `Report card_Course number` INT NOT NULL,
  PRIMARY KEY (`Student number`, `Class Schedule_Course name`, `Examination Schedule_Course name`, `Report card_Course number`),
  INDEX `fk_Student_Food Reservation_idx` (`Food Reservation_Name` ASC) VISIBLE,
  INDEX `fk_Student_Class Schedule1_idx` (`Class Schedule_Course name` ASC) VISIBLE,
  INDEX `fk_Student_Examination Schedule1_idx` (`Examination Schedule_Course name` ASC) VISIBLE,
  INDEX `fk_Student_Select unit1_idx` (`Select unit_Course group` ASC) VISIBLE,
  CONSTRAINT `fk_Student_Food Reservation`
    FOREIGN KEY (`Food Reservation_Name`)
    REFERENCES `mydb`.`Food Reservation` (`Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_Class Schedule1`
    FOREIGN KEY (`Class Schedule_Course name`)
    REFERENCES `mydb`.`Class Schedule` (`Course name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_Examination Schedule1`
    FOREIGN KEY (`Examination Schedule_Course name`)
    REFERENCES `mydb`.`Examination Schedule` (`Course name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_Select unit1`
    FOREIGN KEY (`Select unit_Course group`)
    REFERENCES `mydb`.`Select unit` (`Course group`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Course` (
  `Course code` INT NOT NULL,
  `Number of Course` INT NULL,
  `Faculty` VARCHAR(45) NULL,
  `Professor` VARCHAR(45) NULL,
  `Select unit_Course group` INT NOT NULL,
  PRIMARY KEY (`Course code`, `Select unit_Course group`),
  INDEX `fk_Course_Select unit1_idx` (`Select unit_Course group` ASC) VISIBLE,
  CONSTRAINT `fk_Course_Select unit1`
    FOREIGN KEY (`Select unit_Course group`)
    REFERENCES `mydb`.`Select unit` (`Course group`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Assessment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Assessment` (
  `Professor name` VARCHAR(45) NOT NULL,
  `Course name` VARCHAR(45) NULL,
  `Grade` INT NULL,
  PRIMARY KEY (`Professor name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Report card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Report card` (
  `Course number` INT NOT NULL,
  `Course name` VARCHAR(45) NULL,
  `number of course` INT NULL,
  `Grade` INT NULL,
  `GPA` INT NULL,
  `Student_Student number` INT NOT NULL,
  `Student_Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Report card_Course number` INT NOT NULL,
  PRIMARY KEY (`Course number`, `Student_Student number`, `Student_Class Schedule_Course name`, `Student_Examination Schedule_Course name`, `Student_Report card_Course number`),
  INDEX `fk_Report card_Student1_idx` (`Student_Student number` ASC, `Student_Class Schedule_Course name` ASC, `Student_Examination Schedule_Course name` ASC, `Student_Report card_Course number` ASC) VISIBLE,
  CONSTRAINT `fk_Report card_Student1`
    FOREIGN KEY (`Student_Student number` , `Student_Class Schedule_Course name` , `Student_Examination Schedule_Course name` , `Student_Report card_Course number`)
    REFERENCES `mydb`.`Student` (`Student number` , `Class Schedule_Course name` , `Examination Schedule_Course name` , `Report card_Course number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Presence`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Presence` (
  `Course name` VARCHAR(45) NOT NULL,
  `Course group` INT NULL,
  `Professor` VARCHAR(45) NULL,
  `Number of sessions` INT NULL,
  `Number of absences` INT NULL,
  `Number of excused absences` INT NULL,
  PRIMARY KEY (`Course name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Electronic payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Electronic payment` (
  `resone` VARCHAR(45) NOT NULL,
  `Amount` INT NULL,
  `Date of payment` DATE NULL,
  `Time of payment` TIME NULL,
  `Receipt number` INT NULL,
  `Student_Student number` INT NOT NULL,
  `Student_Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Report card_Course number` INT NOT NULL,
  PRIMARY KEY (`resone`, `Student_Student number`, `Student_Class Schedule_Course name`, `Student_Examination Schedule_Course name`, `Student_Report card_Course number`),
  INDEX `fk_Electronic payment_Student1_idx` (`Student_Student number` ASC, `Student_Class Schedule_Course name` ASC, `Student_Examination Schedule_Course name` ASC, `Student_Report card_Course number` ASC) VISIBLE,
  CONSTRAINT `fk_Electronic payment_Student1`
    FOREIGN KEY (`Student_Student number` , `Student_Class Schedule_Course name` , `Student_Examination Schedule_Course name` , `Student_Report card_Course number`)
    REFERENCES `mydb`.`Student` (`Student number` , `Class Schedule_Course name` , `Examination Schedule_Course name` , `Report card_Course number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Drop course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Drop course` (
  `Course name` VARCHAR(45) NOT NULL,
  `Professor` VARCHAR(45) NULL,
  `Course group` INT NULL,
  `Confirm` TINYINT NULL,
  `Student_Student number` INT NOT NULL,
  `Student_Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Report card_Course number` INT NOT NULL,
  PRIMARY KEY (`Course name`),
  INDEX `fk_Drop course_Student1_idx` (`Student_Student number` ASC, `Student_Class Schedule_Course name` ASC, `Student_Examination Schedule_Course name` ASC, `Student_Report card_Course number` ASC) VISIBLE,
  CONSTRAINT `fk_Drop course_Student1`
    FOREIGN KEY (`Student_Student number` , `Student_Class Schedule_Course name` , `Student_Examination Schedule_Course name` , `Student_Report card_Course number`)
    REFERENCES `mydb`.`Student` (`Student number` , `Class Schedule_Course name` , `Examination Schedule_Course name` , `Report card_Course number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Book loen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Book loen` (
  `Book name` VARCHAR(45) NOT NULL,
  `Book code` INT NULL,
  `Treasury` VARCHAR(45) NULL,
  `Reserve Date` DATE NULL,
  `Return deadline` DATE NULL,
  `Reprieve` TINYINT NULL,
  `Financial` INT NULL,
  PRIMARY KEY (`Book name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Student_has_Assessment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Student_has_Assessment` (
  `Student_Student number` INT NOT NULL,
  `Student_Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Assessment_Professor name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Student_Student number`, `Student_Class Schedule_Course name`, `Student_Examination Schedule_Course name`, `Assessment_Professor name`),
  INDEX `fk_Student_has_Assessment_Assessment1_idx` (`Assessment_Professor name` ASC) VISIBLE,
  INDEX `fk_Student_has_Assessment_Student1_idx` (`Student_Student number` ASC, `Student_Class Schedule_Course name` ASC, `Student_Examination Schedule_Course name` ASC) VISIBLE,
  CONSTRAINT `fk_Student_has_Assessment_Student1`
    FOREIGN KEY (`Student_Student number` , `Student_Class Schedule_Course name` , `Student_Examination Schedule_Course name`)
    REFERENCES `mydb`.`Student` (`Student number` , `Class Schedule_Course name` , `Examination Schedule_Course name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_Assessment_Assessment1`
    FOREIGN KEY (`Assessment_Professor name`)
    REFERENCES `mydb`.`Assessment` (`Professor name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Student_has_Book loen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Student_has_Book loen` (
  `Student_Student number` INT NOT NULL,
  `Student_Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Report card_Course number` INT NOT NULL,
  `Book loen_Book name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Student_Student number`, `Student_Class Schedule_Course name`, `Student_Examination Schedule_Course name`, `Student_Report card_Course number`, `Book loen_Book name`),
  INDEX `fk_Student_has_Book loen_Book loen1_idx` (`Book loen_Book name` ASC) VISIBLE,
  INDEX `fk_Student_has_Book loen_Student1_idx` (`Student_Student number` ASC, `Student_Class Schedule_Course name` ASC, `Student_Examination Schedule_Course name` ASC, `Student_Report card_Course number` ASC) VISIBLE,
  CONSTRAINT `fk_Student_has_Book loen_Student1`
    FOREIGN KEY (`Student_Student number` , `Student_Class Schedule_Course name` , `Student_Examination Schedule_Course name` , `Student_Report card_Course number`)
    REFERENCES `mydb`.`Student` (`Student number` , `Class Schedule_Course name` , `Examination Schedule_Course name` , `Report card_Course number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_Book loen_Book loen1`
    FOREIGN KEY (`Book loen_Book name`)
    REFERENCES `mydb`.`Book loen` (`Book name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Presence_has_Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Presence_has_Student` (
  `Presence_Course name` VARCHAR(45) NOT NULL,
  `Student_Student number` INT NOT NULL,
  `Student_Class Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Examination Schedule_Course name` VARCHAR(45) NOT NULL,
  `Student_Report card_Course number` INT NOT NULL,
  PRIMARY KEY (`Presence_Course name`, `Student_Student number`, `Student_Class Schedule_Course name`, `Student_Examination Schedule_Course name`, `Student_Report card_Course number`),
  INDEX `fk_Presence_has_Student_Student1_idx` (`Student_Student number` ASC, `Student_Class Schedule_Course name` ASC, `Student_Examination Schedule_Course name` ASC, `Student_Report card_Course number` ASC) VISIBLE,
  INDEX `fk_Presence_has_Student_Presence1_idx` (`Presence_Course name` ASC) VISIBLE,
  CONSTRAINT `fk_Presence_has_Student_Presence1`
    FOREIGN KEY (`Presence_Course name`)
    REFERENCES `mydb`.`Presence` (`Course name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Presence_has_Student_Student1`
    FOREIGN KEY (`Student_Student number` , `Student_Class Schedule_Course name` , `Student_Examination Schedule_Course name` , `Student_Report card_Course number`)
    REFERENCES `mydb`.`Student` (`Student number` , `Class Schedule_Course name` , `Examination Schedule_Course name` , `Report card_Course number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
